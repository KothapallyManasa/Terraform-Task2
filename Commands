kotha@Manuraj MINGW64 ~/OneDrive/desktop/Terraform (master)
$ terraform init
Initializing the backend...
Initializing provider plugins...
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.84.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

kotha@Manuraj MINGW64 ~/OneDrive/desktop/Terraform (master)
$ terraform validate
Success! The configuration is valid.


kotha@Manuraj MINGW64 ~/OneDrive/desktop/Terraform (master)
$ terraform plan
aws_instance.nginx_instance_eu_north_1: Refreshing state... [id=i-0d0f9934c14a4383d]
aws_instance.nginx_instance_eu_west_2: Refreshing state... [id=i-045a355143752e953]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  ~ update in-place

Terraform will perform the following actions:

  # aws_instance.nginx_instance_eu_north_1 will be updated in-place
  ~ resource "aws_instance" "nginx_instance_eu_north_1" {
        id                                   = "i-0d0f9934c14a4383d"
      ~ tags                                 = {
          ~ "Name" = "nginx-instance-eu-north-1" -> "nginx-instance-region1"
        }
      ~ tags_all                             = {
          ~ "Name" = "nginx-instance-eu-north-1" -> "nginx-instance-region1"
        }
        # (39 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # aws_instance.nginx_instance_eu_west_2 will be updated in-place
  ~ resource "aws_instance" "nginx_instance_eu_west_2" {
        id                                   = "i-045a355143752e953"
      ~ tags                                 = {
          ~ "Name" = "nginx-instance-eu-west-2" -> "nginx-instance-region2"
        }
      ~ tags_all                             = {
          ~ "Name" = "nginx-instance-eu-west-2" -> "nginx-instance-region2"
        }
        # (39 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

Plan: 0 to add, 2 to change, 0 to destroy.

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

kotha@Manuraj MINGW64 ~/OneDrive/desktop/Terraform (master)
$ terraform applhy
Terraform has no command named "applhy". Did you mean "apply"?

To see all of Terraform's top-level commands, run:
  terraform -help


kotha@Manuraj MINGW64 ~/OneDrive/desktop/Terraform (master)
$ terraform apply
aws_instance.nginx_instance_eu_west_2: Refreshing state... [id=i-045a355143752e953]
aws_instance.nginx_instance_eu_north_1: Refreshing state... [id=i-0d0f9934c14a4383d]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  ~ update in-place

Terraform will perform the following actions:

  # aws_instance.nginx_instance_eu_north_1 will be updated in-place
  ~ resource "aws_instance" "nginx_instance_eu_north_1" {
        id                                   = "i-0d0f9934c14a4383d"
      ~ tags                                 = {
          ~ "Name" = "nginx-instance-eu-north-1" -> "nginx-instance-region1"
        }
      ~ tags_all                             = {
          ~ "Name" = "nginx-instance-eu-north-1" -> "nginx-instance-region1"
        }
        # (39 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

  # aws_instance.nginx_instance_eu_west_2 will be updated in-place
  ~ resource "aws_instance" "nginx_instance_eu_west_2" {
        id                                   = "i-045a355143752e953"
      ~ tags                                 = {
          ~ "Name" = "nginx-instance-eu-west-2" -> "nginx-instance-region2"
        }
      ~ tags_all                             = {
          ~ "Name" = "nginx-instance-eu-west-2" -> "nginx-instance-region2"
        }
        # (39 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

Plan: 0 to add, 2 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_instance.nginx_instance_eu_west_2: Modifying... [id=i-045a355143752e953]
aws_instance.nginx_instance_eu_north_1: Modifying... [id=i-0d0f9934c14a4383d]
aws_instance.nginx_instance_eu_west_2: Modifications complete after 2s [id=i-045a355143752e953]
aws_instance.nginx_instance_eu_north_1: Modifications complete after 2s [id=i-0d0f9934c14a4383d]

Apply complete! Resources: 0 added, 2 changed, 0 destroyed.

kotha@Manuraj MINGW64 ~/OneDrive/desktop/Terraform (master)
$
